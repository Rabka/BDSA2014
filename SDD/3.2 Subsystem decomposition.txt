\subsection{Decomposition}

\begin{figure}
\includegraphics[scale = 0.3]{Subsystems.png}
\caption{CALENDAR subsystem decomposition (UML component diagram)}
\label{fig:decomposition}  % Figure \ref{fig:decomposition}
\end{figure}

As stated in section \ref{sec:style} the general architecture, is divided in two. The Client responsible for event management and user interactions as add new event, looking at the calendar, and the Server which stores events, accounts, notifications and notifying users. Both parts are shown in Figure \ref{fig:decomposition} with there subsystems.

The Client part design is based on a three-tier architectural style, to enables easier development or modification of different user interfaces, without changing to much of the application, to satisfy som of our design goals (e.g., Usability, portability) The application logic layer is dedicated to communication with the server and managing events. In the storage layer, the subsystem LocalStorage is responsible for storing local copies of data and changes. Together all the subsystems of the Client, starts and stores prograss of all use cases related to the user.

The Server part contains the Server facade subsystem that manages the requests from the Client and delegates requests to nested subsystems for entity storage and synchronization. Various nested subsystems are responsible for operations dealing with Synchronization, Accounts and Notifications. Which all are stored by the Database subsystem.